---
meta:
  name:    safe
  release: safe
  target:  pipes
  url:     https://pipes.starkandwayne.com

  initial_version: 0.0.1

  manifest:
    path: (( concat "manifests/" meta.name ".yml" ))
    vars: "--- {}"
    vars-pr: (( grab meta.manifest.vars ))


  shout:
    username: ((shout.username))
    password: ((shout.password))
    url: https://10.200.131.1:7109

  git:
    email: ci@starkandwayne.com
    name:  Stark & Wayne CI Bot

  bosh-lite:
    target: https://10.200.131.9:25555
    username: ((thunder-dome.username))
    password: ((thunder-dome.password))
    cacert:   ((thunder-dome.ca-certificate))
    deployment-pr: (( concat meta.name "-testflight-pr" ))

  aws:
    access_key: ((cfcommunity.access))
    secret_key: ((cfcommunity.secret))

  github:
    owner:  cloudfoundry-community
    repo:   safe-boshrelease
    branch: master
    private_key:  ((github.private-key))
    access_token: ((github.access-token))

  slack:
    webhook: ((slack.webhook))
    channel: '#vault'

    blob_success:  '(( concat "$BUILD_PIPELINE_NAME: New version of $BUILD_JOB_NAME was detected, and updated in master. <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME| Cut a new release?>" ))'
    blob_failure:  '(( concat "$BUILD_PIPELINE_NAME: :airplane_arriving: <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| Failed to update the blob for $BUILD_JOB_NAME>" ))'


groups:
  - name: blobs
    jobs:
      - strongbox
      - vault-broker

jobs:
  - name: testflight-pr
    public: true
    serial: true
    plan:
    - name: main
      do:
      - name: get
        aggregate:
          - { get: git-pull-requests, trigger: true, version: every }
      - name: pending-status
        put: git-pull-requests
        params:
          path: git-pull-requests
          status: pending
      - name: testflights
        aggregate:
        - name: testflight
          task: testflight
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: (( grab meta.image.name ))
                tag:        (( grab meta.image.tag ))
            inputs:
              - { name: git-pull-requests }
            run:
              path: ./git-pull-requests/ci/scripts/testflight
              args: []
            params:
              REPO_ROOT:            git-pull-requests
              BOSH_ENVIRONMENT:     (( grab meta.bosh-lite.target ))
              BOSH_CA_CERT:         (( grab meta.bosh-lite.cacert ))
              BOSH_CLIENT:          (( grab meta.bosh-lite.username ))
              BOSH_CLIENT_SECRET:   (( grab meta.bosh-lite.password ))
              BOSH_DEPLOYMENT:      (( grab meta.bosh-lite.deployment-pr ))
              TEST_ERRANDS:         (( grab meta.test-errands || meta.test-errand || ~ ))
              AWS_ACCESS_KEY:       (( grab meta.aws.access_key ))
              AWS_SECRET_KEY:       (( grab meta.aws.secret_key ))
              MANIFEST_PATH:        (( grab meta.manifest.path ))
              MANIFEST_VARS:        (( grab meta.manifest.vars-pr ))
          on_success:
            put: git-pull-requests
            params:
              path: git-pull-requests
              status: success
          on_failure:
            put: git-pull-requests
            params:
              path: git-pull-requests
              status: failure
      - name: pr-success-message
        task: pr-success-message
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          inputs:
            - { name: git-pull-requests }
          outputs:
            - { name: message }
          run:
            path: sh
            args:
            - -ce
            - |
              cd git-pull-requests
              pr_url=$(git config --get pullrequest.url)
              cd -
              echo "<${pr_url}|Pull request passed testflight> Merge when ready: ${pr_url}" > message/body
      on_success:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          file: message/body
          ok: yes
          link: (( grab meta.shout.links.pipeline ))

  - name: strongbox # {{{
    public: true
    plan:
    - aggregate:
      - { get: git }
      - { get: strongbox, trigger: true }
    - task: update-strongbox
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: (( grab meta.image.name ))
            tag:        (( grab meta.image.tag ))
        inputs:
        - name: git
        - name: strongbox
        outputs:
        - name: pushme
        run:
          path: ./git/ci/scripts/update-blob
        params:
          REPO_ROOT:        git
          REPO_OUT:         pushme
          BLOB_DIR:         strongbox
          BLOB_NAME:        strongbox
          BLOB_BINARY:      strongbox-linux-amd64
          BLOB_CLEANUP:     strongbox/strongbox
          BLOB_DESTINATION: strongbox/strongbox
          AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
          AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
          BRANCH:           (( grab meta.github.branch ))
      on_success:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: update-blob job '$BUILD_JOB_NAME' succeeded.
          ok: yes
          link: (( grab meta.shout.links.pipeline ))
      on_failure:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: update-blob job '$BUILD_JOB_NAME' failed.
          ok: no
          link: (( grab meta.shout.links.build ))
    - put: git
      params:
        rebase: true
        repository: pushme/git
      on_success:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: A new version of '$BUILD_JOB_NAME' has been added to the BOSH release.
          ok: yes
          link: (( grab meta.shout.links.pipeline ))
      on_failure:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: Failed to push blob changes to git (for '$BUILD_JOB_NAME').
          ok: no
          link: (( grab meta.shout.links.build ))
  # }}}
  - name: vault-broker # {{{
    public: true
    plan:
    - aggregate:
      - { get: git }
      - { get: vault-broker, trigger: true }
    - task: update-vault-broker
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: (( grab meta.image.name ))
            tag:        (( grab meta.image.tag ))
        inputs:
        - name: git
        - name: vault-broker
        outputs:
        - name: pushme
        run:
          path: ./git/ci/scripts/update-blob
        params:
          REPO_ROOT:        git
          REPO_OUT:         pushme
          BLOB_DIR:         vault-broker
          BLOB_NAME:        vault-broker
          BLOB_BINARY:      vault-broker-linux-amd64
          BLOB_CLEANUP:     vault-broker/vault-broker
          BLOB_DESTINATION: vault-broker/vault-broker
          AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
          AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
          BRANCH:           (( grab meta.github.branch ))
      on_success:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: update-blob job '$BUILD_JOB_NAME' succeeded.
          ok: yes
          link: (( grab meta.shout.links.pipeline ))
      on_failure:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: update-blob job '$BUILD_JOB_NAME' failed.
          ok: no
          link: (( grab meta.shout.links.build ))
    - put: git
      params:
        rebase: true
        repository: pushme/git
      on_success:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: A new version of '$BUILD_JOB_NAME' has been added to the BOSH release.
          ok: yes
          link: (( grab meta.shout.links.pipeline ))
      on_failure:
        put: notify
        params:
          topic: (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
          message: Failed to push blob changes to git (for '$BUILD_JOB_NAME').
          ok: no
          link: (( grab meta.shout.links.build ))
  # }}}

resources:
  - name: strongbox # {{{
    type: github-release
    source:
      user:         jhunt
      repository:   go-strongbox
      access_token: (( grab meta.github.access_token ))
  # }}}
  - name: vault-broker # {{{
    type: github-release
    source:
      user:         cloudfoundry-community
      repository:   vault-broker
      access_token: (( grab meta.github.access_token ))
  # }}}
  - name: git-pull-requests
    type: pull-request
    source:
      access_token: (( grab meta.github.access_token ))
      private_key:  (( grab meta.github.private_key ))
      repo:         (( concat meta.github.owner "/" meta.github.repo ))
      base: (( grab meta.github.branch ))

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

